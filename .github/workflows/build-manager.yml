name: Build Manager

on:
  push:
    branches: [ "main", "ci" ]
    paths:
      - '.github/workflows/build-manager.yml'
      - 'manager/**'
      - 'kernel/**'
      - 'userspace/ksud/**'
      - 'userspace/susfs/**'
      - 'userspace/kpmmgr/**'
  pull_request:
    branches: [ "main" ]
    paths:
      - 'manager/**'
  workflow_dispatch:
    inputs:
      build_lkm:
        required: true
        type: choice
        default: "auto"
        options:
          - "true"
          - "false"
          - "auto"
        description: "Whether to build lkm"
      upload_lkm:
        required: true
        type: boolean
        default: true
        description: "Whether to upload lkm"

jobs:
  check-build-lkm:
    runs-on: ubuntu-latest
    outputs:
      build_lkm: ${{ steps.set-output.outputs.build_lkm }}
      upload_lkm: ${{ steps.set-output.outputs.upload_lkm }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine LKM build
        id: set-output
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${{ inputs.build_lkm }}" != "auto" ]; then
            BUILD_LKM="${{ inputs.build_lkm }}"
          else
            # Detect changes in kernel folder
            if git diff --quiet origin/lkm...HEAD -- kernel; then
              BUILD_LKM=false
            else
              BUILD_LKM=true
            fi
          fi

          # Determine upload
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            UPLOAD=true
          elif [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            UPLOAD="${{ inputs.upload_lkm }}"
          else
            UPLOAD=false
          fi

          echo "kernel changed: $BUILD_LKM"
          echo "need upload: $UPLOAD"
          echo "build_lkm=$BUILD_LKM" >> "$GITHUB_OUTPUT"
          echo "upload_lkm=$UPLOAD" >> "$GITHUB_OUTPUT"

  build-lkm:
    needs: check-build-lkm
    uses: ./.github/workflows/build-lkm.yml
    if: ${{ needs.check-build-lkm.outputs.build_lkm == 'true' }}
    with:
      upload: ${{ needs.check-build-lkm.outputs.upload_lkm == 'true' }}
    secrets: inherit

  build-susfs:
    if: ${{ always() }}
    needs: [ check-build-lkm, build-lkm ]
    strategy:
      matrix:
        include:
          - target: aarch64-linux-android
            os: ubuntu-latest
    uses: ./.github/workflows/susfs.yml
    with:
      target: ${{ matrix.target }}
      os: ${{ matrix.os }}

  build-kpmmgr:
    if: ${{ always() }}
    needs: [ check-build-lkm, build-lkm ]
    strategy:
      matrix:
        include:
          - target: aarch64-linux-android
            os: ubuntu-latest
    uses: ./.github/workflows/kpmmgr.yml
    with:
      target: ${{ matrix.target }}
      os: ${{ matrix.os }}

  build-ksud:
    if: ${{ always() }}
    needs: [ check-build-lkm, build-lkm ]
    strategy:
      matrix:
        include:
          - target: aarch64-linux-android
            os: ubuntu-latest
          - target: x86_64-linux-android
            os: ubuntu-latest
          - target: armv7-linux-androideabi
            os: ubuntu-latest
    uses: ./.github/workflows/ksud.yml
    with:
      target: ${{ matrix.target }}
      os: ${{ matrix.os }}
      pack_lkm: true
      pull_lkm: ${{ needs.check-build-lkm.outputs.build_lkm != 'true' }}

  build-manager:
    if: ${{ always() }}
    needs: build-ksud
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./manager
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: susfs-aarch64-linux-android
          path: ./aarch64-linux-android
      - uses: actions/download-artifact@v4
        with:
          name: kpmmgr-aarch64-linux-android
          path: ./arm64-v8a
      - uses: actions/download-artifact@v4
        with:
          name: ksud-aarch64-linux-android
          path: ./aarch64-linux-android
      - uses: actions/download-artifact@v4
        with:
          name: ksud-x86_64-linux-android
          path: ./x86_64-linux-android
      - uses: actions/download-artifact@v4
        with:
          name: ksud-armv7-linux-androideabi
          path: ./armv7-linux-androideabi

      - name: Copy ksud to app jniLibs
        run: |
          mkdir -p app/src/main/jniLibs/arm64-v8a
          mkdir -p app/src/main/jniLibs/x86_64
          mkdir -p app/src/main/jniLibs/armeabi-v7a
          cp -f ../aarch64-linux-android/release/zakozako app/src/main/jniLibs/arm64-v8a/libzakozako.so
          cp -f ../x86_64-linux-android/release/zakozako app/src/main/jniLibs/x86_64/libzakozako.so
          cp -f ../armv7-linux-androideabi/release/zakozako app/src/main/jniLibs/armeabi-v7a/libzakozako.so

      - name: Copy kpmmgr to app jniLibs
        run: |
          mkdir -p app/src/main/jniLibs/arm64-v8a
          cp -f ../arm64-v8a/kpmmgr app/src/main/jniLibs/arm64-v8a/libkpmmgr.so

      - name: Copy susfs to app jniLibs
        run: |
          mkdir -p app/src/main/jniLibs/arm64-v8a
          cp -f ../aarch64-linux-android/release/zakozakozako app/src/main/jniLibs/arm64-v8a/libzakozakozako.so

      - name: Build with Gradle
        run: ./gradlew clean assembleRelease

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: manager
          path: app/build/outputs/apk/release/*.apk

      - name: Upload mappings
        uses: actions/upload-artifact@v4
        with:
          name: "mappings"
          path: "app/build/outputs/mapping/release/"
